JSON
 4. Создать внешний репозиторий c названием JSON. 
+
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/RzhanovskaS/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json

 7. Добавить файл под гит.
 git add .

 8. Закоммитить файл.
git commit
#(created)
 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
cat > new.json
{ "info about myself":
        ["name" : "Lana Rzhanovska",
        "age" : 33,
        "pets" : 2,
        "future salary" : 500]}


 11. Отправить изменения на внешний репозиторий.
git add .
git commit #changes
git push

 12. Создать файл preferences.json
 touch preferences.json


 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
{"preferences" :
        ["film" : "Pirates of the Caribbean",
        "series" : "Friends",
        "food" : "cheesburger",
        "season" : "autumn",
        "country to visit" : "Great Britain"]}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json
{ "hard skils":
	{ "first" : "Understanding the systems’ specifications",
	"second" : "Being familiar with tools for test management and bug tracking",
	"third" : "Understanding certain programming languages"},
{ "soft skills" :
{ "first" : "Empathy",
"second" : "Attention to detail",
"third" : "Communication skills",
"fourt" : "Problem-solving skills"}}

 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
 git commit
git push

 16. На веб интерфейсе создать файл bug_report.json.
+
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.


 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{ "Title" : "Модальное окно календаря не закрывается после свайпа вниз в альбомной ориентации",
 "Preconditions" : "1. Пользователь зарегистрирован и авторизован",
 "Steps" : "1. Повернуть телефон в альбомную ориентацию 2. Развернуть месяц в календаре свайпом вниз"}


 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
+
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull
cat bug_report.json


XML
 21. Создать внешний репозиторий c названием XML.
mkdir XML

 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/RzhanovskaS/XML.git

 23. Внутри локального XML создать файл “new.xml”.
 24. Добавить файл под гит.
git add . 
 25. Закоммитить файл.
git commit -m "commit file"

 26. Отправить файл на внешний GitHub репозиторий.
git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
<Info>
  <NAME>Lana Rzhanovska</NAME>
  <Pets>2</Pets>
  <Salary>500</Salary>
  </Info>


 28. Отправить изменения на внешний репозиторий.
git add .
git commit -m "Add text to new.xml"
git push

 29. Создать файл preferences.xml
touch preferences.xml


 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
<preferences>
        <film>Pirates of the Caribbean</film>
        <series>Friends</series>
        <food>cheesburger</food>
        <season>autumn</season>
        <Country_to_visit>Great Britain</Country_to_visit>
</preferences>


 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch sklls.xml
vim sklls.xml
<preferences>
        <film>Pirates of the Caribbean</film>
        <series>Friends</series>
        <food>cheesburger</food>
        <season>autumn</season>
        <Country_to_visit>Great Britain</Country_to_visit>
</preferences>

 32. Сделать коммит в одну строку.
 git add  preferences.xml  sklls.xml
git commit

 33. Отправить сразу 2 файла на внешний репозиторий.
git push 

 34. На веб интерфейсе создать файл bug_report.xml.
+
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
+
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
+
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
+
 38. Синхронизировать внешний и локальный репозиторий XML
git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
+
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/RzhanovskaS/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
touch new.txt

 4. Добавить файл под гит.
git add new.txt

 5. Закоммитить файл.
git commit -m created file 

 6. Отправить файл на внешний GitHub репозиторий.
git push 

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
+
 8. Отправить изменения на внешний репозиторий.
git add new.txt
git commit -m text added 
git push 
 9. Создать файл preferences.txt
touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
+
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
+
 12. Сделать коммит в одну строку.
+
 13. Отправить сразу 2 файла на внешний репозиторий.
git push 

 14. На веб интерфейсе создать файл bug_report.txt.
+
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
+
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
+
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
+
 18. Синхронизировать внешний и локальный репозиторий TXT

